//Problem: Groot's pie finder
//findPies([1, 2, 3, 2, 1], 6)
//returns [0, 1, 2] or [2, 1, 0]
//findPies([8, 4, 3, 2, 6, 5], 6)
//returns [1, 3] or [4]
import java.util.*;

public class Groot
{
      
	public static void main(String[] args) {
		Scanner scn=new Scanner(System.in);
		int n=scn.nextInt();
		int[] pies=new int[n];
		for(int i=0;i<n;i++){
		    pies[i]=scn.nextInt();
		}
		int desired=scn.nextInt();
		List<Integer> list=new ArrayList<Integer>();
		List<List<Integer>> ans=new ArrayList<>();
		getpies(0,pies,desired,list,ans);
		for(int i=0;i<ans.size();i++){
		    for(int j=0;j<ans.get(i).size();j++){
		System.out.print(ans.get(i).get(j)+ " ");
		    }
		    System.out.println();
		}
		
		
	}
	public static void getpies(int i,int[] pies,int desired,List<Integer> list,List<List<Integer>> ans){
	    if(i== pies.length ){
	        if(desired==0){
	            ans.add(new ArrayList<>(list));
	        }
	        return;
	    }
	    if(  i+1 <pies.length && pies[i]<=desired){
	    list.add(i);
	    getpies(i+1,pies,desired-pies[i],list,ans);
  list.remove(list.size()-1);
	    }
	        getpies(i+1,pies,desired,list,ans);
	}
	
}
